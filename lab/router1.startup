ifconfig eth0 10.1.1.254/24 up
ifconfig eth1 192.168.254.1/24 up
# Router router1 FRR Service Setup - Generated by bash.sh
echo "Setting up FRR for router1..."
mkdir -p /etc/frr /var/run/frr /var/log/frr
chown -R frr:frr /etc/frr /var/run/frr /var/log/frr
chmod -R u+rwx,g+rwx /var/run/frr /var/log/frr
chmod 755 /etc/frr

echo "Creating /etc/frr/daemons for router1..."
cat << EOL_DAEMONS > /etc/frr/daemons
# FRR daemons configuration for router1
zebra=yes
ripd=yes
# Explicitly disable others if necessary, though FRR defaults usually handle this.
# bgpd=no
# ospfd=no
# Ensure options point to the correct config files and enable VTYSH access.
zebra_options="  --daemon -A 127.0.0.1 -f /etc/frr/zebra.conf"
ripd_options="   --daemon -A 127.0.0.1 -f /etc/frr/ripd.conf"
EOL_DAEMONS

echo "Creating /etc/frr/zebra.conf for router1..."
cat << EOL_ZEBRA > /etc/frr/zebra.conf
! Zebra configuration for router1
hostname router1
password zebra
enable password zebra
log file /var/log/frr/zebra.log debugging
!
! Interface stubs (FRR picks up IPs from kernel if interfaces are up)
interface eth0
 description LAN interface for 10.1.1.0/24
!
interface eth1
 description Backbone interface for 192.168.254.0/24
!
interface lo
!
line vty
!
EOL_ZEBRA

echo "Creating /etc/frr/ripd.conf for router1..."
cat << EOL_RIPD > /etc/frr/ripd.conf
! RIPd configuration for router1
hostname router1
password zebra
enable password zebra
!
router rip
 network 10.1.1.0/24
 network 192.168.254.0/24
 redistribute connected
!
log file /var/log/frr/ripd.log debugging
!
line vty
!
EOL_RIPD

echo "Setting permissions for FRR config files on router1..."
chown frr:frr /etc/frr/*.conf
chmod 640 /etc/frr/*.conf

echo "Attempting to enable IP forwarding on router1..."
if echo 1 > /proc/sys/net/ipv4/ip_forward; then
    echo "IP forwarding enabled via /proc on router1."
else
    echo "WARNING: Failed to enable IP forwarding via /proc on router1. Check container privileges."
fi
echo "Current IP forwarding status on router1: $(cat /proc/sys/net/ipv4/ip_forward)"

if [ -x /usr/lib/frr/frrinit.sh ]; then
    echo "Starting FRR service on router1..."
    /usr/lib/frr/frrinit.sh start
    sleep 3 # Give daemons time to initialize
    echo "FRR startup initiated for router1. Checking processes..."
    ps aux | grep -E 'frr|zebra|ripd' || echo "No FRR processes found with ps on router1."
    echo "Checking FRR log directory contents for router1..."
    ls -la /var/log/frr/
else
    echo "[ERROR] FRR init script /usr/lib/frr/frrinit.sh not found or not executable on router1." >&2
fi
